plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// apply plugin: 'com.android.application'
// apply plugin: 'kotlin-android'
// apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('keystore.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {

    compileSdkVersion 35

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        applicationId "com.irfangujjar.tmdb"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion 35
        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            OperatingSystem os= DefaultNativePlatform.currentOperatingSystem
            def keyStoreFile
            if(os.isLinux()){
                keyStoreFile=file("/home/codewithirfan/.GooglePlayStoreUploadKeys/TMDbApp/keystore.properties")
            }else if(os.isWindows()){
                keyStoreFile=file("C:\\Users\\m_irf\\AppData\\Local\\.GooglePlayStoreUploadKeys\\TMDbApp\\keystore.properties")
            }else if(os.isMacOsX()){
                keyStoreFile=file("/Users/poison/GooglePlayStoreUploadKeys/TMDbApp/keystore.properties")
            }
            if(keyStoreFile.exists()){
                def props=new Properties()
                props.load(new FileInputStream(keyStoreFile))
                if(os.isLinux()) {
                    storeFile props['storeFileLinux'] ? file(props['storeFileLinux']) : null
                }else if(os.isWindows()){
                    storeFile props['storeFileWindows'] ? file(props['storeFileWindows']) : null
                }else if(os.isMacOsX())
                    storeFile props['storeFileMac'] ? file(props['storeFileMac']) : null
                storePassword props['storePassword']
                keyAlias props['keyAlias']
                keyPassword props['keyPassword']
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
        }
    }
    lint {
        disable 'InvalidPackage'
    }
    namespace 'com.irfangujjar.tmdb'
}

flutter {
    source '../..'
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:33.9.0')
    implementation 'com.google.firebase:firebase-analytics'

    // implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // testImplementation 'junit:junit:4.13.2'
    // androidTestImplementation 'androidx.test:runner:1.5.2'
    // androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // implementation "androidx.multidex:multidex:$multidex_version"
    // implementation platform('com.google.firebase:firebase-bom:29.3.1')
    // implementation 'com.google.firebase:firebase-analytics-ktx'
}
// apply plugin: 'com.google.gms.google-services'
